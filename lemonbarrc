#!/bin/sh

#######
# Theme
#######

RED="#BF616A"
YELLOW="#EBCB8B"
GREEN="#A3BE8C"
BLUE="#88c0d0"
DARK="#2E3440"

###########################
# Data generation functions
###########################

network() {
	ROUTE=$(ip route get 1.1.1.1 2> /dev/null)
       	RC=$?
	if [ $RC -ne 0 ]; then
		echo -n "Not Connected"
	else
		DEVICE=$(echo $ROUTE | grep -Po "dev \K\w+")
		TYPE=$(nmcli connection show | grep $DEVICE | awk '{print $3}')
		if [ "$TYPE" = "ethernet" ]; then
	       		echo -n "Wired"
		elif [ "$TYPE" = "wifi" ]; then
			echo -n $(nmcli connection show | grep $DEVICE | awk '{print $1}')
		fi
	fi
}

desktop() {
	INDEX=$(xprop -root _NET_CURRENT_DESKTOP | cut -d '=' -f 2)
	echo -n $(($INDEX + 1))
}

song() {
	echo -n $(mpc current)
}

clock() {
	echo -n $(date "+%a %b %d at %I:%M")
}

volume() {
	PARSE='
	/%/ {
		if ($7 == "off") { print "MUTED" }
		else { print $2"%" }
	}'
	echo -n $(amixer get Master | awk -F"[]%[]" "$PARSE")
}

battery() {
	VALUE=$(acpi --battery | cut -d, -f 2)
	echo -n ${VALUE%?}
}

######
# Main
######

# Format the lemonbar format string
format() {
	NETWORK_VALUE=$(network)
	if [ "$NETWORK_VALUE" = "Not Connected" ]; then
		NETWORK_COLOR=$RED
	else
		NETWORK_COLOR=$GREEN
	fi

	BATTERY_VALUE=$(battery)
	if [ "$BATTERY_VALUE" -lt "10" ]; then
		BATTERY_COLOR=$RED
	elif [ "$BATTERY_VALUE" -lt "25" ]; then
		BATTERY_COLOR=$YELLOW
	else
		BATTERY_COLOR=$BLUE
	fi

	VOLUME_VALUE=$(volume)
	if [ "$VOLUME_VALUE" = "MUTED" ]; then
		VOLUME_COLOR=$RED
	else
		VOLUME_COLOR=$DARK
	fi

	echo -n "%{l} "
	echo -n "Desktop $(desktop) | "
	echo -n "%{U$VOLUME_COLOR}%{+u} %{A:amixer set Master toggle:}Volume [$VOLUME_VALUE] %{-u} %{U-}%{A}"
	
	SONG_VALUE=$(song)
	if [ "$SONG_VALUE" != "" ]; then
		echo -n "| %{U$YELLOW}%{+u} $SONG_VALUE %{-u} %{U-}"
	fi

	echo -n "%{c}"
	echo -n "$(clock)"
	echo -n "%{r}"
	echo -n "%{U$NETWORK_COLOR}%{+u} $NETWORK_VALUE %{-u} %{U-}| "
	echo -n "%{U$BATTERY_COLOR}%{+u} Battery $BATTERY_VALUE% %{-u} %{U-}"
}

# Print the formatted string to stdout every second
while true; do
	echo $(format)
	sleep 1
done
